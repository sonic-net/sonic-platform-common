# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - '*'

variables:
  DIFF_COVER_CHECK_THRESHOLD: 80
  DIFF_COVER_ENABLE: 'true'
  DIFF_COVER_WORKING_DIRECTORY: $(System.DefaultWorkingDirectory)
  ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    BRANCH_NAME: $(System.PullRequest.TargetBranch)
  ${{ else }}:
    BRANCH_NAME: $(Build.SourceBranchName)


pool:
  vmImage: 'ubuntu-20.04'

container:
  image: sonicdev-microsoft.azurecr.io:443/sonic-slave-bookworm:latest

steps:
- task: DownloadPipelineArtifact@2
  inputs:
    source: specific
    project: build
    pipeline: 142
    artifact: sonic-buildimage.vs
    runVersion: 'latestFromBranch'
    runBranch: 'refs/heads/$(BRANCH_NAME)'
    patterns: |
      **/*.whl
      **/*.deb
    path: '$(Build.ArtifactStagingDirectory)'
  displayName: "Download artifacts from latest sonic-buildimage build"

- script: |
    set -xe
    sudo apt-get -y purge libnl-3-dev libnl-route-3-dev || true
    sudo dpkg -i libyang_1.0.73_amd64.deb \
                 libnl-3-200_*.deb \
                 libnl-genl-3-200_*.deb \
                 libnl-route-3-200_*.deb \
                 libnl-nf-3-200_*.deb \
                 libswsscommon_1.0.0_amd64.deb \
                 python3-swsscommon_1.0.0_amd64.deb
  workingDirectory: $(Build.ArtifactStagingDirectory)/target/debs/bookworm/
  displayName: 'Install Debian dependencies'

- script: |
    set -xe
    sudo pip3 install swsssdk-2.0.1-py3-none-any.whl
    sudo pip3 install sonic_py_common-1.0-py3-none-any.whl
    sudo pip3 install sonic_yang_mgmt-1.0-py3-none-any.whl
    sudo pip3 install sonic_yang_models-1.0-py3-none-any.whl
    sudo pip3 install sonic_config_engine-1.0-py3-none-any.whl
  workingDirectory: $(Build.ArtifactStagingDirectory)/target/python-wheels/bookworm/
  displayName: 'Install Python dependencies'

- script: |
    set -ex
    # Install .NET CORE
    curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
    . /etc/os-release
    sudo apt-add-repository https://packages.microsoft.com/debian/$VERSION_ID/prod
    sudo apt-get update
    sudo apt-get install -y dotnet-sdk-8.0
  displayName: "Install .NET CORE"

# Python 3
- script: |
    set -ex
    pip3 install ".[testing]"
    pip3 uninstall --yes sonic-platform-common
    pytest --ignore docker
  displayName: 'Test Python 3'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '$(System.DefaultWorkingDirectory)/test-results.xml'
    testRunTitle: Python 3
    failTaskOnFailedTests: true
  condition: succeededOrFailed()
  displayName: 'Publish Python 3 test results'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/htmlcov/'
  displayName: 'Publish Python 3 test coverage'

- script: |
    python3 -m build -n
  displayName: 'Build Python 3 wheel'

- publish: '$(System.DefaultWorkingDirectory)/dist/'
  artifact: wheels
  displayName: "Publish Python wheels"
